name: Check

on:
  pull_request:
    branches:
      - main

concurrency:
  group: check-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_OPTIONS: --max_old_space_size=6144

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare
        uses: ./.github/utils/app
        with:
          build: false

      - name: Run Linter
        # run: pnpm exec eslint ${{ steps.changed-files.outputs.all_changed_files }}
        run: pnpm lint

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare
        uses: ./.github/utils/app
        with:
          build: false

      - name: Run Formatter
        # run: pnpm exec prettier --check --ignore-unknown ${{ steps.changed-files.outputs.all_changed_files }}
        run: pnpm format
  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Vitest uses `git diff` under the hood to find the changed files in it's `--changed`
          # option, which in turn means we need to fetch the full git history so git is able to diff
          fetch-depth: 0

      - name: Prepare
        uses: ./.github/utils/app
      
      - name: Setup postgres
        uses: docker://postgis/postgis:15-3.4-alpine
        with:
          env: |
            POSTGRES_USER=postgres
            POSTGRES_PASSWORD=postgres
            POSTGRES_DB=postgres
          ports: 5432:5432
          healthcheck: |
            CMD pg_isready -U postgres
          entrypoint: |
            bash -c '
              echo "host all all all trust" >> /var/lib/postgresql/data/pg_hba.conf
              echo "listen_addresses = '*'" >> /var/lib/postgresql/data/postgresql.conf
              /docker-entrypoint.sh postgres &
              until pg_isready -U postgres; do
                sleep 1
              done
              psql -U postgres -c "CREATE DATABASE postgres;"
              psql -U postgres -c "CREATE USER postgres WITH SUPERUSER PASSWORD '"'"'postgres'"'"';"
              psql -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE postgres TO postgres;"
              psql -U postgres -c "ALTER USER postgres WITH PASSWORD '"'"'postgres'"'"';"
              psql -U postgres -c "ALTER USER postgres WITH LOGIN;"
              psql -U postgres -c "ALTER USER postgres WITH CREATEDB;"
              psql -U postgres -c "ALTER USER postgres WITH CREATEROLE;"
              psql -U postgres -c "ALTER USER postgres WITH REPLICATION;"
              psql -U postgres -c "ALTER USER postgres WITH BYPASSRLS;"
              psql -U postgres -c "ALTER USER postgres WITH CONNECTION LIMIT -1;"
              psql -U postgres -c "ALTER USER postgres WITH VALID UNTIL '"'"'infinity'"'"';"
              psql -U postgres -c "ALTER USER postgres WITH INHERIT 
            '
      - name: Setup directus
        uses: docker://directus/directus:10.7.2
        with:
          env: |
            DB_CLIENT=pg
            DB_HOST=postgres
            DB_PORT=postgres
            DB_USER=postgres
            DB_PASSWORD=postgres
            DB_DATABASE=postgres
            LOG_LEVEL=debug
            KEY="0fda9121-269d-44bd-91f2-4ff05be14b4b
            SECRET="86cb4a76-a4c6-4ce7-8181-b0445d95675c"
            CACHE_ENABLED=false

      - name: Setup directus
        uses: ./.github/utils/setup-directus

      # todo setup keycloak

      - name: Run migrations
        run: pnpm seed

      - name: Run Tests
        run: pnpm test -- -- --changed origin/${{ github.base_ref }} --passWithNoTests